#include <cstdio>
#include <cstring>
#include <iostream>
#include <algorithm>
#define REP(i,a,b) for(int i = (a);i <= (b);i++)
#define PER(i,a,b) for(int i = (a);i >= (b);i--)
#define SF scanf
#define PF printf
#define N 100010
#define INF 0x3f3f3f3f3f3f3f3fll
using namespace std;
typedef long long ll;
int n,m,a[N];
char pt[4];
int fst[N],nxt[N<<1],to[N<<1],cnt = 0;
int fa[N];
ll f[N][2];
int dep[N];
void addedge(int x,int y){
    nxt[++cnt] = fst[x], fst[x] = cnt, to[cnt] = y;
}
void dfs1(int u,int d){
    dep[u] = d;
    for(int i = fst[u];i;i = nxt[i]){
        int v = to[i];
        if(v != fa[u]) fa[v] = u, dfs1(v,d + 1);
    }
}
int id[2],val[2];
void dfs(int u){
    f[u][1] = a[u] * 1ll, f[u][0] = 0;
    for(int i = fst[u];i;i = nxt[i]){
        int v = to[i];
        if(v == fa[u]) continue;
        dfs(v);
        f[u][0] += f[v][1];
        f[u][1] += min(f[v][1],f[v][0]);
    }
    REP(i,0,1) if(id[i] == u) f[u][1 ^ val[i]] = INF;
}
ll tmp[N][2];
void up(int uu,int id,ll val){
	REP(i,0,1) tmp[1][i] = f[1][i];
	for(int u = uu;u != 1;u = fa[u]){
		PF("!%d\n",u);
		REP(i,0,1) tmp[u][i] = f[u][i];
		if(u == uu) f[u][id] = val;
		for(int i = fst[fa[u]];i;i = nxt[i]){
	        int v = to[i];
	        if(v == fa[u]) continue;
	        f[fa[u]][0] += f[v][1];
	        f[fa[u]][1] += min(f[v][1],f[v][0]);
	    }
	}
	REP(i,0,1) f[1][i] = tmp[1][i] ;
	for(int u = uu;u != 1;u = fa[u])
		REP(i,0,1) f[u][i] = tmp[u][i];
}
int main()
{
    memset(fst,0,sizeof fst);
    cin>>n>>m>>pt + 1;
    REP(i,1,n) SF("%d",&a[i]);
    REP(i,1,n - 1){
        int x,y;
        SF("%d %d",&x,&y);
        addedge(x,y);
        addedge(y,x);
    }
    fa[1] = 0;
    dfs1(1,1);
    dfs(1);
    while(m--){
        REP(i,0,1) SF("%d %d",&id[i],&val[i]);
        if(val[0] + val[1] == 0 && (fa[id[0]] == id[1] || fa[id[1]] == id[0]))
            puts("-1");
        else{
            //dfs(1);
            REP(i,0,1) up(id[i],1 ^ val[i],INF);
            PF("%lld\n",min(f[1][1],f[1][0]));
        }
    }
    return 0;
}